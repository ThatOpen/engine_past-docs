"use strict";(self.webpackChunkengine_docs=self.webpackChunkengine_docs||[]).push([[3905],{4787:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>h,contentTitle:()=>s,default:()=>a,frontMatter:()=>l,metadata:()=>d,toc:()=>c});var i=r(4848),t=r(8453);const l={},s="Civil3DNavigator",d={id:"api/@thatopen/components-front/classes/Civil3DNavigator",title:"Civil3DNavigator",description:"This component provides functionality for navigating and interacting with civil engineering data in a 3D environment. \ud83d\udcd5 Tutorial. \ud83d\udcd8 API.",source:"@site/docs/api/@thatopen/components-front/classes/Civil3DNavigator.md",sourceDirName:"api/@thatopen/components-front/classes",slug:"/api/@thatopen/components-front/classes/Civil3DNavigator",permalink:"/3.0.x/api/@thatopen/components-front/classes/Civil3DNavigator",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"AreaMeasurement",permalink:"/3.0.x/api/@thatopen/components-front/classes/AreaMeasurement"},next:{title:"CivilCrossSectionNavigator",permalink:"/3.0.x/api/@thatopen/components-front/classes/CivilCrossSectionNavigator"}},h={},c=[{value:"Extends",id:"extends",level:2},{value:"Properties",id:"properties",level:2},{value:"enabled",id:"enabled",level:3},{value:"Overrides",id:"overrides",level:4},{value:"onHighlight",id:"onhighlight",level:3},{value:"Type declaration",id:"type-declaration",level:4},{value:"curve",id:"curve",level:5},{value:"index",id:"index",level:5},{value:"point",id:"point",level:5},{value:"onMarkerChange",id:"onmarkerchange",level:3},{value:"Type declaration",id:"type-declaration-1",level:4},{value:"alignment",id:"alignment",level:5},{value:"curve",id:"curve-1",level:5},{value:"percentage",id:"percentage",level:5},{value:"type",id:"type",level:5},{value:"onMarkerHidden",id:"onmarkerhidden",level:3},{value:"Type declaration",id:"type-declaration-2",level:4},{value:"type",id:"type-1",level:5},{value:"uuid",id:"uuid",level:3},{value:"Accessors",id:"accessors",level:2},{value:"highlighter",id:"highlighter",level:3},{value:"Throws",id:"throws",level:4},{value:"Returns",id:"returns",level:4},{value:"world",id:"world",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Methods",id:"methods",level:2},{value:"draw()",id:"draw",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Throws",id:"throws-1",level:4},{value:"hideMarker()",id:"hidemarker",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Throws",id:"throws-2",level:4},{value:"Remarks",id:"remarks",level:4},{value:"Example",id:"example",level:4},{value:"setMarker()",id:"setmarker",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Throws",id:"throws-3",level:4},{value:"Remarks",id:"remarks-1",level:4},{value:"Example",id:"example-1",level:4}];function o(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"civil3dnavigator",children:"Civil3DNavigator"}),"\n",(0,i.jsxs)(n.p,{children:["This component provides functionality for navigating and interacting with civil engineering data in a 3D environment. \ud83d\udcd5 ",(0,i.jsx)(n.a,{href:"https://docs.thatopen.com/Tutorials/Components/Front/Civil3DNavigator",children:"Tutorial"}),". \ud83d\udcd8 ",(0,i.jsx)(n.a,{href:"https://docs.thatopen.com/api/@thatopen/components-front/classes/Civil3DNavigator",children:"API"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"extends",children:"Extends"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"Component"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsx)(n.h3,{id:"enabled",children:"enabled"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"enabled"}),": ",(0,i.jsx)(n.code,{children:"boolean"})," = ",(0,i.jsx)(n.code,{children:"true"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"OBC.Component.enabled"}),"\n",(0,i.jsx)(n.h4,{id:"overrides",children:"Overrides"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"OBC.Component.enabled"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"onhighlight",children:"onHighlight"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"readonly"})," ",(0,i.jsx)(n.strong,{children:"onHighlight"}),": ",(0,i.jsx)(n.code,{children:"Event"}),"<",(0,i.jsx)(n.code,{children:"object"}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Event triggered when a curve is highlighted.\r\nProvides information about the highlighted curve, point, and index."}),"\n",(0,i.jsx)(n.h4,{id:"type-declaration",children:"Type declaration"}),"\n",(0,i.jsx)(n.h5,{id:"curve",children:"curve"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"curve"}),": ",(0,i.jsx)(n.code,{children:"CurveMesh"}),"<",(0,i.jsx)(n.code,{children:"BufferGeometry"}),"<",(0,i.jsx)(n.code,{children:"NormalBufferAttributes"}),">, ",(0,i.jsx)(n.code,{children:"Material"})," | ",(0,i.jsx)(n.code,{children:"Material"}),"[]>"]}),"\n"]}),"\n",(0,i.jsx)(n.h5,{id:"index",children:"index"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"index"}),": ",(0,i.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,i.jsx)(n.h5,{id:"point",children:"point"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"point"}),": ",(0,i.jsx)(n.code,{children:"Vector3"})]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"onmarkerchange",children:"onMarkerChange"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"readonly"})," ",(0,i.jsx)(n.strong,{children:"onMarkerChange"}),": ",(0,i.jsx)(n.code,{children:"Event"}),"<",(0,i.jsx)(n.code,{children:"object"}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Event triggered when a marker (point) on a curve changes.\r\nProvides information about the alignment, percentage, type of marker, and the curve."}),"\n",(0,i.jsx)(n.h4,{id:"type-declaration-1",children:"Type declaration"}),"\n",(0,i.jsx)(n.h5,{id:"alignment",children:"alignment"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"alignment"}),": ",(0,i.jsx)(n.code,{children:"AlignmentObject"})]}),"\n"]}),"\n",(0,i.jsx)(n.h5,{id:"curve-1",children:"curve"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"curve"}),": ",(0,i.jsx)(n.code,{children:"CivilCurve"})]}),"\n"]}),"\n",(0,i.jsx)(n.h5,{id:"percentage",children:"percentage"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"percentage"}),": ",(0,i.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,i.jsx)(n.h5,{id:"type",children:"type"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"type"}),": ",(0,i.jsx)(n.a,{href:"/3.0.x/api/@thatopen/components-front/type-aliases/CivilMarkerType",children:(0,i.jsx)(n.code,{children:"CivilMarkerType"})})]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"onmarkerhidden",children:"onMarkerHidden"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"readonly"})," ",(0,i.jsx)(n.strong,{children:"onMarkerHidden"}),": ",(0,i.jsx)(n.code,{children:"Event"}),"<",(0,i.jsx)(n.code,{children:"object"}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Event triggered when a marker (point) on a curve is hidden.\r\nProvides information about the type of marker."}),"\n",(0,i.jsx)(n.h4,{id:"type-declaration-2",children:"Type declaration"}),"\n",(0,i.jsx)(n.h5,{id:"type-1",children:"type"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"type"}),": ",(0,i.jsx)(n.a,{href:"/3.0.x/api/@thatopen/components-front/type-aliases/CivilMarkerType",children:(0,i.jsx)(n.code,{children:"CivilMarkerType"})})]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"uuid",children:"uuid"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"static"})," ",(0,i.jsx)(n.code,{children:"readonly"})," ",(0,i.jsx)(n.strong,{children:"uuid"}),": ",(0,i.jsx)(n.code,{children:'"0a59c09e-2b49-474a-9320-99f51f40f182"'})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"A unique identifier for the component.\r\nThis UUID is used to register the component within the Components system."}),"\n",(0,i.jsx)(n.h2,{id:"accessors",children:"Accessors"}),"\n",(0,i.jsx)(n.h3,{id:"highlighter",children:"highlighter"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"get"})," ",(0,i.jsx)(n.strong,{children:"highlighter"}),"(): ",(0,i.jsx)(n.code,{children:"CurveHighlighter"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Getter for the highlighter property.\r\nReturns the curve highlighter instance."}),"\n",(0,i.jsx)(n.h4,{id:"throws",children:"Throws"}),"\n",(0,i.jsx)(n.p,{children:"If the navigator is not initialized."}),"\n",(0,i.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"CurveHighlighter"})}),"\n",(0,i.jsx)(n.p,{children:"The curve highlighter instance."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"world",children:"world"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"get"})," ",(0,i.jsx)(n.strong,{children:"world"}),"(): ",(0,i.jsx)(n.code,{children:"null"})," | ",(0,i.jsx)(n.code,{children:"World"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Getter for the world property.\r\nReturns the current world instance."}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"set"})," ",(0,i.jsx)(n.strong,{children:"world"}),"(",(0,i.jsx)(n.code,{children:"world"}),"): ",(0,i.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Setter for the world property.\r\nSets the world instance and initializes the component."}),"\n",(0,i.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Parameter"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"world"})}),(0,i.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,i.jsx)(n.code,{children:"null"})," | ",(0,i.jsx)(n.code,{children:"World"})]}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"The new world instance or null to clear the current world."})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"null"})," | ",(0,i.jsx)(n.code,{children:"World"})]}),"\n",(0,i.jsx)(n.p,{children:"The current world instance or null if not set."}),"\n",(0,i.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(n.h3,{id:"draw",children:"draw()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"draw"}),"(",(0,i.jsx)(n.code,{children:"model"}),"): ",(0,i.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Draws the civil engineering data onto the 3D scene."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Parameter"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"model"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"FragmentsGroup"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"The FragmentsGroup containing the civil data to be drawn."})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"void"})}),"\n",(0,i.jsx)(n.h4,{id:"throws-1",children:"Throws"}),"\n",(0,i.jsx)(n.p,{children:"Will throw an error if the model does not have civil data or if the world is not set."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"hidemarker",children:"hideMarker()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"hideMarker"}),"(",(0,i.jsx)(n.code,{children:"type"}),"): ",(0,i.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Hides the marker of the specified type."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-2",children:"Parameters"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Parameter"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"type"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.a,{href:"/3.0.x/api/@thatopen/components-front/type-aliases/CivilMarkerType",children:(0,i.jsx)(n.code,{children:"CivilMarkerType"})})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"The type of marker to hide."})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-3",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"void"})}),"\n",(0,i.jsx)(n.h4,{id:"throws-2",children:"Throws"}),"\n",(0,i.jsx)(n.p,{children:"Will throw an error if the mouse markers have not been initialized.\r\nThis can happen if the world has not been set before using this method."}),"\n",(0,i.jsx)(n.h4,{id:"remarks",children:"Remarks"}),"\n",(0,i.jsx)(n.p,{children:"This method hides the marker of the specified type by setting its visibility to false."}),"\n",(0,i.jsx)(n.h4,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'const navigator = new Civil3DNavigator(components);\r\nnavigator.world = world; // Initialize the world\r\nnavigator.hideMarker("select");\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"setmarker",children:"setMarker()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"setMarker"}),"(",(0,i.jsx)(n.code,{children:"alignment"}),", ",(0,i.jsx)(n.code,{children:"percentage"}),", ",(0,i.jsx)(n.code,{children:"type"}),"): ",(0,i.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Sets a marker at a specific percentage along the given alignment."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-3",children:"Parameters"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Parameter"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"alignment"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"AlignmentObject"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"The alignment on which to place the marker."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"percentage"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"number"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"The percentage along the alignment where the marker should be placed."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"type"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.a,{href:"/3.0.x/api/@thatopen/components-front/type-aliases/CivilMarkerType",children:(0,i.jsx)(n.code,{children:"CivilMarkerType"})})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"The type of marker to be set."})]})]})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-4",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"void"})}),"\n",(0,i.jsx)(n.h4,{id:"throws-3",children:"Throws"}),"\n",(0,i.jsx)(n.p,{children:"Will throw an error if the mouse markers have not been initialized.\r\nThis can happen if the world has not been set before using this method."}),"\n",(0,i.jsx)(n.h4,{id:"remarks-1",children:"Remarks"}),"\n",(0,i.jsx)(n.p,{children:"This method calculates the 3D point at the given percentage along the alignment,\r\nsets the marker at that point, and makes the marker visible."}),"\n",(0,i.jsx)(n.h4,{id:"example-1",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'const navigator = new Civil3DNavigator(components);\r\nnavigator.world = world; // Initialize the world\r\nconst alignment = model.civilData.alignments.get(alignmentId);\r\nif (alignment) {\r\n  navigator.setMarker(alignment, 0.5, "select");\r\n}\n'})})]})}function a(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>d});var i=r(6540);const t={},l=i.createContext(t);function s(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);