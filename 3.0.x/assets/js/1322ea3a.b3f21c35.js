"use strict";(self.webpackChunkengine_docs=self.webpackChunkengine_docs||[]).push([[9905],{2999:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var s=n(4848),i=n(8453);const r={},l="@thatopen/components-front",o={id:"api/@thatopen/components-front/index",title:"@thatopen/components-front",description:"Classes",source:"@site/docs/api/@thatopen/components-front/index.md",sourceDirName:"api/@thatopen/components-front",slug:"/api/@thatopen/components-front/",permalink:"/engine_past-docs/3.0.x/api/@thatopen/components-front/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"IfcElements",permalink:"/engine_past-docs/3.0.x/api/@thatopen/components/variables/IfcElements"},next:{title:"AngleMeasurement",permalink:"/engine_past-docs/3.0.x/api/@thatopen/components-front/classes/AngleMeasurement"}},a={},c=[{value:"Classes",id:"classes",level:2},{value:"Interfaces",id:"interfaces",level:2},{value:"Type Aliases",id:"type-aliases",level:2}];function h(e){const t={a:"a",h1:"h1",h2:"h2",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"thatopencomponents-front",children:"@thatopen/components-front"}),"\n",(0,s.jsx)(t.h2,{id:"classes",children:"Classes"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Class"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/classes/AngleMeasurement",children:"AngleMeasurement"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["This component allows users to measure angles in a 3D scene. \ud83d\udcd5 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/Tutorials/Components/Front/AngleMeasurement",children:"Tutorial"}),". \ud83d\udcd8 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/api/@thatopen/components-front/classes/AngleMeasurement",children:"API"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/classes/AreaMeasurement",children:"AreaMeasurement"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["This component allows users to measure areas in a 3D scene. \ud83d\udcd5 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/Tutorials/Components/Front/AreaMeasurement",children:"Tutorial"}),". \ud83d\udcd8 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/api/@thatopen/components-front/classes/AreaMeasurement",children:"API"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/classes/Civil3DNavigator",children:"Civil3DNavigator"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["This component provides functionality for navigating and interacting with civil engineering data in a 3D environment. \ud83d\udcd5 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/Tutorials/Components/Front/Civil3DNavigator",children:"Tutorial"}),". \ud83d\udcd8 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/api/@thatopen/components-front/classes/Civil3DNavigator",children:"API"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/classes/CivilCrossSectionNavigator",children:"CivilCrossSectionNavigator"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["This component is used to navigate and visualize cross sections of a 3D model. \ud83d\udcd5 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/Tutorials/Components/Front/CivilCrossSectionNavigator",children:"Tutorial"}),". \ud83d\udcd8 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/api/@thatopen/components-front/classes/CivilCrossSectionNavigator",children:"API"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/classes/CivilElevationNavigator",children:"CivilElevationNavigator"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["This component is responsible for navigating and visualizing elevation data of infra/civil models (vertical alignments). \ud83d\udcd5 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/Tutorials/Components/Front/CivilElevationNavigator",children:"Tutorial"}),". \ud83d\udcd8 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/api/@thatopen/components-front/classes/CivilElevationNavigator",children:"API"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/classes/CivilNavigator",children:"CivilNavigator"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Abstract class representing a Civil Navigator. It provides functionality to navigate and interact with civil engineering data."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/classes/CivilPlanNavigator",children:"CivilPlanNavigator"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["This component is responsible for navigating and visualizing plan data of infra/civil models (horizontal alignments). \ud83d\udcd5 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/Tutorials/Components/Front/CivilPlanNavigator",children:"Tutorial"}),". \ud83d\udcd8 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/api/@thatopen/components-front/classes/CivilPlanNavigator",children:"API"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/classes/ClipEdges",children:"ClipEdges"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["A component that can add fills and outlines to the Clipper. \ud83d\udcd5 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/Tutorials/Components/Front/ClipEdges",children:"Tutorial"}),". \ud83d\udcd8 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/api/@thatopen/components-front/classes/ClipEdges",children:"API"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/classes/ClippingEdges",children:"ClippingEdges"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Class representing the ClippingEdges component. This is responsible for managing and rendering the edges of clipped objects."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/classes/ClippingFills",children:"ClippingFills"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Class for managing and rendering the fills of a clipping plane."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/classes/EdgeMeasurement",children:"EdgeMeasurement"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["This component allows users to measure geometry edges in a 3D scene. \ud83d\udcd5 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/Tutorials/Components/Front/EdgeMeasurement",children:"Tutorial"}),". \ud83d\udcd8 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/api/@thatopen/components-front/classes/EdgeMeasurement",children:"API"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/classes/EdgesPlane",children:"EdgesPlane"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"A more advanced version of Clipper planes that also includes edges and fills."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/classes/EdgesStyles",children:"EdgesStyles"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"A class representing styles for clipping edges in a 3D scene."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/classes/FaceMeasurement",children:"FaceMeasurement"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["This component allows users to measure geometry faces in a 3D scene. \ud83d\udcd5 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/Tutorials/Components/Front/FaceMeasurement",children:"Tutorial"}),". \ud83d\udcd8 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/api/@thatopen/components-front/classes/FaceMeasurement",children:"API"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/classes/GeometryCullerRenderer",children:"GeometryCullerRenderer"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"A renderer to determine a geometry visibility on screen"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/classes/GraphicVertexPicker",children:"GraphicVertexPicker"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"A class that extends OBC.VertexPicker to provide a graphical marker for picking vertices in a 3D scene."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/classes/Highlighter",children:"Highlighter"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["This component allows highlighting and selecting fragments in a 3D scene. \ud83d\udcd5 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/Tutorials/Components/Front/Highlighter",children:"Tutorial"}),". \ud83d\udcd8 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/api/@thatopen/components-front/classes/Highlighter",children:"API"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/classes/IfcStreamer",children:"IfcStreamer"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["The IfcStreamer component is responsible for managing and streaming tiled IFC data. It provides methods for loading, removing, and managing IFC models, as well as handling visibility and caching. \ud83d\udcd5 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/Tutorials/Components/Front/IfcStreamer",children:"Tutorial"}),". \ud83d\udcd8 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/api/@thatopen/components-front/classes/IfcStreamer",children:"API"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/classes/LengthMeasurement",children:"LengthMeasurement"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["A basic dimension tool to measure distances between 2 points in 3D and display a 3D symbol displaying the numeric value. \ud83d\udcd5 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/Tutorials/Components/Front/LengthMeasurement",children:"Tutorial"}),". \ud83d\udcd8 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/api/@thatopen/components-front/classes/LengthMeasurement",children:"API"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/classes/Mark",children:"Mark"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Represents a marker in the 3D world."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/classes/Marker",children:"Marker"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["Component for Managing Markers along with creating different types of markers. Every marker is a Simple2DMarker. For every marker that needs to be added, you can use the Manager to add the marker and change its look and feel. \ud83d\udcd5 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/Tutorials/Components/Front/Marker",children:"Tutorial"}),". \ud83d\udcd8 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/api/@thatopen/components-front/classes/Marker",children:"API"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/classes/Outliner",children:"Outliner"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["This component allows adding a colored outline with thickness to fragments in a 3D scene. \ud83d\udcd5 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/Tutorials/Components/Front/Highlighter",children:"Tutorial"}),". \ud83d\udcd8 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/api/@thatopen/components-front/classes/Outliner",children:"API"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/classes/Plans",children:"Plans"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["Component to easily define and navigate 2D floor plans. \ud83d\udcd5 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/Tutorials/Components/Front/Plans",children:"Tutorial"}),". \ud83d\udcd8 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/api/@thatopen/components-front/classes/Plans",children:"API"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/classes/Postproduction",children:"Postproduction"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["Class representing a post-processing effect manager for a 3D scene. It uses the EffectComposer from three.js to apply various post-processing effects. Thanks to ",(0,s.jsx)(t.a,{href:"https://discourse.threejs.org/t/how-to-render-full-outlines-as-a-post-process-tutorial/22674",children:"this"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/classes/PostproductionRenderer",children:"PostproductionRenderer"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["A class that extends RendererWith2D and adds post-processing capabilities. \ud83d\udcd5 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/Tutorials/Components/Front/PostproductionRenderer",children:"Tutorial"}),". \ud83d\udcd8 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/api/@thatopen/components-front/classes/PostproductionRenderer",children:"API"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/classes/RendererWith2D",children:"RendererWith2D"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["A basic renderer capable of rendering 3D and 2D objects (",(0,s.jsx)(t.a,{href:"https://threejs.org/docs/#api/en/core/Object3D",children:"Objec3Ds"})," and ",(0,s.jsx)(t.a,{href:"https://threejs.org/docs/#examples/en/renderers/CSS2DRenderer",children:"CSS2DObjects"})," respectively)."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/classes/Sections",children:"Sections"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"A component to create and manage arbitrary sections for BIM models."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/classes/ShadowDropper",children:"ShadowDropper"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["This component drops shadows on meshes in a 3D scene. \ud83d\udcd5 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/Tutorials/Components/Front/ShadowDropper",children:"Tutorial"}),". \ud83d\udcd8 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/api/@thatopen/components-front/classes/ShadowDropper",children:"API"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/classes/SimpleDimensionLine",children:"SimpleDimensionLine"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"A class representing a simple dimension line in a 3D space."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/classes/VolumeMeasurement",children:"VolumeMeasurement"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["This component allows users to measure geometry volumes in a 3D scene. \ud83d\udcd5 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/Tutorials/Components/Front/VolumeMeasurement",children:"Tutorial"}),". \ud83d\udcd8 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/api/@thatopen/components-front/classes/VolumeMeasurement",children:"API"}),"."]})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"interfaces",children:"Interfaces"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Interface"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/interfaces/AreaSelection",children:"AreaSelection"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Represents a selection made by the user, containing area, perimeter, mesh, and label."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/interfaces/BvhLineSegmentsGeometry",children:"BvhLineSegmentsGeometry"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["A line segments geometry whose ",(0,s.jsx)(t.a,{href:"https://github.com/gkjohnson/three-mesh-bvh",children:"BVH"})," has been computed."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/interfaces/ClipStyle",children:"ClipStyle"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["A style defines the appearance of the lines of the ",(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/classes/ClippingEdges",children:"ClippingEdges"})," for a set of meshes."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/interfaces/DimensionData",children:"DimensionData"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Interface representing the data required to create a dimension line."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/interfaces/Edge",children:"Edge"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["The lines that are drawn when the clipping plane cuts the geometry specified by the ",(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/interfaces/ClipStyle",children:"ClipStyle"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/interfaces/HighlightEvents",children:"HighlightEvents"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Interface defining the events that the Highlighter class can trigger. Each highlighter has its own set of events, identified by the highlighter name."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/interfaces/HighlighterConfig",children:"HighlighterConfig"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Interface defining the configuration options for the Highlighter class."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/interfaces/IGroupedMarkers",children:"IGroupedMarkers"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Interface representing a group of markers."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/interfaces/IMarker",children:"IMarker"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Interface representing a marker object."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/interfaces/PlanView",children:"PlanView"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The data that describes a plan view."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/interfaces/PostproductionSettings",children:"PostproductionSettings"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Interface defining the settings for the post-processing effects."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/interfaces/Section",children:"Section"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The data that describes a section view."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/interfaces/SerializedAreaMeasure",children:"SerializedAreaMeasure"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Represents a serialized version of an AreaSelection, used for saving and loading measurements."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/interfaces/Shadow",children:"Shadow"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Represents a shadow object used in the application."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/interfaces/Shadows",children:"Shadows"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["Represents a collection of shadows, where each shadow is identified by a unique ID. The keys of the object are the IDs, and the values are the corresponding ",(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/interfaces/Shadow",children:"Shadow"})," objects."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/interfaces/StreamLoaderSettings",children:"StreamLoaderSettings"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Settings for the stream loader."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/interfaces/StreamPropertiesSettings",children:"StreamPropertiesSettings"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Settings for the stream properties."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/interfaces/StreamedInstance",children:"StreamedInstance"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Represents an instance of a streamed object."})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"type-aliases",children:"Type Aliases"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type alias"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/type-aliases/CivilMarkerType",children:"CivilMarkerType"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Represents the type of markers used in the CivilMarkerType class."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/type-aliases/Edges",children:"Edges"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["Type definition for the Edges object. The Edges object is a dictionary where the keys are strings and the values are of type ",(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/interfaces/Edge",children:"Edge"}),". It is used to store and manage multiple ",(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/interfaces/Edge",children:"Edge"})," instances, each identified by a unique name."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/type-aliases/IndexFragmentMap",children:"IndexFragmentMap"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"A map used to map the triangles of the clipping fill with the original fragment item. It's used to be able to trace to which elements a specific triangle of the clipping fill's face belongs (e.g. for highlighting an item when selecting one of its clipping fills)."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/type-aliases/LineStyles",children:"LineStyles"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["A type representing a dictionary of ",(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/interfaces/ClipStyle",children:"ClipStyle"})," objects, where the keys are the names of the styles."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/engine_past-docs/3.0.x/api/@thatopen/components-front/type-aliases/StreamedInstances",children:"StreamedInstances"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"A map of streamed instances, grouped by their unique identifier."})]})]})]})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>o});var s=n(6540);const i={},r=s.createContext(i);function l(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);